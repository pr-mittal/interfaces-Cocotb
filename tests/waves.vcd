$date
	Wed Mar  8 13:28:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module dut_test $end
$var wire 1 ! CLK $end
$var wire 1 " RST_N $end
$var wire 1 # busy $end
$var wire 1 $ busy_D_IN $end
$var wire 8 % cfg_address [7:0] $end
$var wire 32 & cfg_data_in [31:0] $end
$var wire 1 ' cfg_en $end
$var wire 1 ( cfg_op $end
$var wire 1 ) cfg_rdy $end
$var wire 1 * din_en $end
$var wire 8 + din_value [7:0] $end
$var wire 1 , dout_en $end
$var wire 1 - dout_ff_FULL_N $end
$var wire 1 . len_en $end
$var wire 8 / len_value [7:0] $end
$var wire 1 0 programmed_length_EN $end
$var wire 1 1 normal_mode_RESET_N $end
$var wire 1 2 len_rdy $end
$var wire 8 3 dout_value [7:0] $end
$var wire 1 4 dout_rdy $end
$var wire 1 5 din_rdy $end
$var wire 32 6 cfg_data_out [31:0] $end
$scope module dut $end
$var wire 1 ! CLK $end
$var wire 1 " RST_N $end
$var wire 1 7 \busy$D_IN $end
$var wire 1 8 \busy$EN $end
$var wire 8 9 cfg_address [7:0] $end
$var wire 32 : cfg_data_in [31:0] $end
$var wire 1 ' cfg_en $end
$var wire 1 ( cfg_op $end
$var wire 1 ) cfg_rdy $end
$var wire 8 ; \current_count$D_IN [7:0] $end
$var wire 1 < \current_count$EN $end
$var wire 1 * din_en $end
$var wire 1 5 din_rdy $end
$var wire 8 = din_value [7:0] $end
$var wire 1 , dout_en $end
$var wire 1 > \dout_ff$CLR $end
$var wire 1 ? \dout_ff$DEQ $end
$var wire 1 @ \dout_ff$ENQ $end
$var wire 1 4 dout_rdy $end
$var wire 8 A dout_value [7:0] $end
$var wire 1 . len_en $end
$var wire 1 2 len_rdy $end
$var wire 8 B len_value [7:0] $end
$var wire 1 C \pause$EN $end
$var wire 1 D \programmed_length$EN $end
$var wire 1 E \sum$EN $end
$var wire 1 F \sw_override$EN $end
$var wire 1 G \w_sw_override$whas $end
$var wire 17 H x__h969 [16:0] $end
$var wire 1 I \sw_override$D_IN $end
$var wire 8 J \sum$D_IN [7:0] $end
$var wire 8 K \programmed_length$D_IN [7:0] $end
$var wire 1 L \pause$D_IN $end
$var wire 8 M next_count__h523 [7:0] $end
$var wire 1 N \dout_ff$FULL_N $end
$var wire 1 O \dout_ff$EMPTY_N $end
$var wire 8 P \dout_ff$D_OUT [7:0] $end
$var wire 8 Q \dout_ff$D_IN [7:0] $end
$var wire 1 R current_count_PLUS_1_EQ_programmed_length___d8 $end
$var wire 32 S cfg_data_out [31:0] $end
$var wire 1 T \MUX_programmed_length$write_1__SEL_1 $end
$var reg 32 U CASE_cfg_address_0_0_CONCAT_x69_4_0_CONCAT_sw__ETC__q1 [31:0] $end
$var reg 1 V busy $end
$var reg 8 W current_count [7:0] $end
$var reg 1 X pause $end
$var reg 8 Y programmed_length [7:0] $end
$var reg 8 Z sum [7:0] $end
$var reg 1 [ sw_override $end
$scope module dout_ff $end
$var wire 1 ! CLK $end
$var wire 1 > CLR $end
$var wire 1 ? DEQ $end
$var wire 8 \ D_IN [7:0] $end
$var wire 1 O EMPTY_N $end
$var wire 1 @ ENQ $end
$var wire 1 N FULL_N $end
$var wire 1 " RST $end
$var wire 1 ] d0d1 $end
$var wire 1 ^ d0di $end
$var wire 1 _ d0h $end
$var wire 1 ` d1di $end
$var wire 8 a D_OUT [7:0] $end
$var reg 8 b data0_reg [7:0] $end
$var reg 8 c data1_reg [7:0] $end
$var reg 1 d empty_reg $end
$var reg 1 e full_reg $end
$scope begin error_checks $end
$var reg 1 f deqerror $end
$var reg 1 g enqerror $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0g
0f
1e
0d
b10101010 c
b10101010 b
b10101010 a
0`
1_
0^
0]
bx \
0[
b10101010 Z
b10101010 Y
0X
b10101010 W
0V
b10101010 U
1T
b0x0x0x0x0 S
0R
bx Q
b10101010 P
0O
1N
b10101011 M
zL
bz K
bx J
zI
b1010101010101010 H
xG
xF
xE
xD
xC
bz B
b10101010 A
0@
z?
0>
bz =
x<
b10101011 ;
bz :
bz 9
x8
17
b0x0x0x0x0 6
15
04
b10101010 3
12
11
z0
bz /
z.
1-
z,
bz +
z*
1)
z(
z'
bz &
bz %
z$
0#
1"
1!
$end
#1000
05
b0 6
b0 S
b0 U
b0 Z
b0 Y
b1 ;
b1 M
b0 H
b0 W
0"
#2500
0!
#5000
08
0D
0C
0F
0G
0<
0E
0'
0?
0,
0.
0*
1"
1!
#7500
0!
#10000
b0 K
1L
0I
1C
1F
1G
b0 /
b0 B
1.
b10 &
b10 :
b100 %
b100 9
1(
1'
1!
#12500
0!
#15000
0C
0F
0G
0.
0'
1X
1!
#17500
0!
#20000
18
1D
b111 K
b111 /
b111 B
1.
1!
#22500
0!
#25000
1<
1E
b0 J
b0 Q
b0 \
b0 +
b0 =
1*
0.
18
0D
15
02
1#
1V
b10000011100000000 H
b111 Y
1!
#27500
0!
#30000
08
0<
0E
0*
b10 ;
b10 M
b10000011100000001 H
b1 W
1!
#32500
0!
#35000
18
1<
1E
1*
1!
#37500
0!
#40000
08
0<
0E
0*
b11 ;
b11 M
b10000011100000010 H
b10 W
1!
#42500
0!
#45000
18
1<
1E
1*
1!
#47500
0!
#50000
08
0<
0E
0*
b100 ;
b100 M
b10000011100000011 H
b11 W
1!
#52500
0!
#55000
18
1<
1E
1*
1!
#57500
0!
#60000
08
0<
0E
0*
b101 ;
b101 M
b10000011100000100 H
b100 W
1!
#62500
0!
#65000
18
1<
1E
1*
1!
#67500
0!
#70000
08
0<
0E
0*
b110 ;
b110 M
b10000011100000101 H
b101 W
1!
#72500
0!
#75000
18
1<
1E
1*
1!
#77500
0!
#80000
08
0*
1_
0^
07
0E
0<
0@
1R
b111 ;
b111 M
b10000011100000110 H
b110 W
1!
#82500
0!
#85000
0_
1^
18
1@
1*
1!
#87500
0!
#90000
17
1D
b1001 K
18
0@
b1001 /
b1001 B
1.
1?
1,
0*
1_
0^
12
05
0`
14
1O
1d
b0 3
b0 A
b0 P
b0 a
b0 b
b11100000110 H
0#
0V
1!
#92500
0!
#95000
1<
1E
1*
0.
18
0D
02
15
04
0O
0d
1#
1V
b1001 Y
0R
b1 ;
b1 M
b10000100100000000 H
b0 W
1!
#97000
0?
0,
#97500
0!
#100000
08
0<
0E
0*
b10 ;
b10 M
b10000100100000001 H
b1 W
1!
#102500
0!
#105000
18
1<
1E
1*
1!
#107500
0!
#110000
08
0<
0E
0*
b11 ;
b11 M
b10000100100000010 H
b10 W
1!
#112500
0!
#115000
18
1<
1E
1*
1!
#117500
0!
#120000
08
0<
0E
0*
b100 ;
b100 M
b10000100100000011 H
b11 W
1!
#122500
0!
#125000
18
1<
1E
1*
1!
#127500
0!
#130000
08
0<
0E
0*
b101 ;
b101 M
b10000100100000100 H
b100 W
1!
#132500
0!
#135000
18
1<
1E
1*
1!
#137500
0!
#140000
08
0<
0E
0*
b110 ;
b110 M
b10000100100000101 H
b101 W
1!
#142500
0!
#145000
18
1<
1E
1*
1!
#147500
0!
#150000
08
0<
0E
0*
b111 ;
b111 M
b10000100100000110 H
b110 W
1!
#152500
0!
#155000
18
1<
1E
1*
1!
#157500
0!
#160000
08
0<
0E
0*
b1000 ;
b1000 M
b10000100100000111 H
b111 W
1!
#162500
0!
#165000
18
1<
1E
1*
1!
#167500
0!
#170000
08
0*
1_
0^
07
0E
0<
0@
1R
b1001 ;
b1001 M
b10000100100001000 H
b1000 W
1!
#172500
0!
#175000
0_
1^
18
1@
1*
1!
#177500
0!
#180000
b0 K
08
0@
b0 /
b0 B
1.
1?
1,
0*
1_
0^
12
05
0`
14
1O
1d
b100100001000 H
0#
0V
1!
#181001
