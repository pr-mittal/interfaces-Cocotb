$date
	Sat Feb 25 15:26:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module dut_test $end
$var wire 1 ! CLK $end
$var wire 1 " RST_N $end
$var wire 8 # cfg_address [7:0] $end
$var wire 32 $ cfg_data_in [31:0] $end
$var wire 1 % cfg_en $end
$var wire 1 & cfg_op $end
$var wire 1 ' cfg_rdy $end
$var wire 1 ( din_en $end
$var wire 8 ) din_value [7:0] $end
$var wire 1 * dout_en $end
$var wire 1 + len_en $end
$var wire 1 , len_rdy $end
$var wire 8 - len_value [7:0] $end
$var wire 8 . dout_value [7:0] $end
$var wire 1 / dout_rdy $end
$var wire 1 0 din_rdy $end
$var wire 32 1 cfg_data_out [31:0] $end
$scope module dut $end
$var wire 1 ! CLK $end
$var wire 1 2 \MUX_programmed_length$write_1__SEL_1 $end
$var wire 1 " RST_N $end
$var wire 1 3 \busy$EN $end
$var wire 8 4 cfg_address [7:0] $end
$var wire 32 5 cfg_data_in [31:0] $end
$var wire 1 % cfg_en $end
$var wire 1 & cfg_op $end
$var wire 1 ' cfg_rdy $end
$var wire 8 6 \current_count$D_IN [7:0] $end
$var wire 1 7 \current_count$EN $end
$var wire 1 ( din_en $end
$var wire 1 0 din_rdy $end
$var wire 8 8 din_value [7:0] $end
$var wire 1 * dout_en $end
$var wire 1 9 \dout_ff$CLR $end
$var wire 1 : \dout_ff$DEQ $end
$var wire 1 ; \dout_ff$ENQ $end
$var wire 1 / dout_rdy $end
$var wire 8 < dout_value [7:0] $end
$var wire 1 + len_en $end
$var wire 1 , len_rdy $end
$var wire 8 = len_value [7:0] $end
$var wire 1 > \pause$EN $end
$var wire 1 ? \programmed_length$EN $end
$var wire 1 @ \sum$EN $end
$var wire 1 A \sw_override$EN $end
$var wire 1 B \w_sw_override$whas $end
$var wire 17 C x__h969 [16:0] $end
$var wire 1 D \sw_override$D_IN $end
$var wire 8 E \sum$D_IN [7:0] $end
$var wire 8 F \programmed_length$D_IN [7:0] $end
$var wire 1 G \pause$D_IN $end
$var wire 8 H next_count__h523 [7:0] $end
$var wire 1 I \dout_ff$FULL_N $end
$var wire 1 J \dout_ff$EMPTY_N $end
$var wire 8 K \dout_ff$D_OUT [7:0] $end
$var wire 8 L \dout_ff$D_IN [7:0] $end
$var wire 1 M current_count_PLUS_1_EQ_programmed_length___d8 $end
$var wire 32 N cfg_data_out [31:0] $end
$var wire 1 O \busy$D_IN $end
$var reg 32 P CASE_cfg_address_0_0_CONCAT_x69_4_0_CONCAT_sw__ETC__q1 [31:0] $end
$var reg 1 Q busy $end
$var reg 8 R current_count [7:0] $end
$var reg 1 S pause $end
$var reg 8 T programmed_length [7:0] $end
$var reg 8 U sum [7:0] $end
$var reg 1 V sw_override $end
$scope module dout_ff $end
$var wire 1 ! CLK $end
$var wire 1 9 CLR $end
$var wire 1 : DEQ $end
$var wire 8 W D_IN [7:0] $end
$var wire 1 J EMPTY_N $end
$var wire 1 ; ENQ $end
$var wire 1 I FULL_N $end
$var wire 1 " RST $end
$var wire 1 X d0d1 $end
$var wire 1 Y d0di $end
$var wire 1 Z d0h $end
$var wire 1 [ d1di $end
$var wire 8 \ D_OUT [7:0] $end
$var reg 8 ] data0_reg [7:0] $end
$var reg 8 ^ data1_reg [7:0] $end
$var reg 1 _ empty_reg $end
$var reg 1 ` full_reg $end
$scope begin error_checks $end
$var reg 1 a deqerror $end
$var reg 1 b enqerror $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0b
0a
1`
0_
b10101010 ^
b10101010 ]
b10101010 \
0[
1Z
0Y
0X
bx W
0V
b10101010 U
b10101010 T
0S
b10101010 R
0Q
b10101010 P
1O
b0x0x0x0x0 N
0M
bx L
b10101010 K
0J
1I
b10101011 H
zG
bz F
bx E
zD
b1010101010101010 C
xB
xA
x@
x?
x>
bz =
b10101010 <
0;
z:
09
bz 8
x7
b10101011 6
bz 5
bz 4
z3
x2
b0x0x0x0x0 1
10
0/
b10101010 .
bz -
1,
z+
z*
bz )
z(
1'
z&
z%
bz $
bz #
1"
1!
$end
#1000
b0 1
b0 N
b0 P
b0 U
b0 T
b1 6
b1 H
b0 C
b0 R
0"
#2500
0!
#5000
1?
12
b101 F
17
1@
b101 -
b101 =
1+
b100000 E
b100000 L
b100000 W
b100000 )
b100000 8
13
1(
0:
0*
1"
1!
#7500
0!
#10000
07
0@
0+
03
0(
bz F
0?
b0x0x 1
b0x0x N
02
b101 P
b1000000 E
b1000000 L
b1000000 W
b100000 U
b101 T
b10 6
b10 H
b1 R
b10000010100000001 C
1Q
1!
#11000
17
1@
13
1(
#12500
0!
#15000
07
0@
03
0(
b1100000 E
b1100000 L
b1100000 W
b1000000 U
b11 6
b11 H
b10000010100000010 C
b10 R
1!
#17000
17
1@
13
1(
#17500
0!
#20000
07
0@
03
0(
b10000000 E
b10000000 L
b10000000 W
b1100000 U
b100 6
b100 H
b10000010100000011 C
b11 R
1!
#21000
17
1@
13
1(
#22500
0!
#25000
03
0(
1Z
0Y
0@
07
0;
b10100000 E
b10100000 L
b10100000 W
b10000000 U
0O
1M
b101 6
b101 H
b10000010100000100 C
b100 R
1!
#27000
0Z
1Y
1;
13
1(
#27500
0!
#30000
0;
1:
1*
03
0(
1Z
0Y
0[
1/
1J
1_
b10100000 .
b10100000 <
b10100000 K
b10100000 \
b10100000 ]
b10100000100 C
0Q
1!
#31001
